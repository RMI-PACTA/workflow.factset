{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "0.0.0.5",

  "parameters": {

    "containerGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the container group."
      }
    },

    "dataTimestamp": {
      "type": "string",
      "metadata": {
        "description": "The time to start the container group."
      }
    },
    "issReportingYear": {
      "type": "string",
      "metadata": {
        "description": "Reporting year to use for ISS data."
      }
    },

    "identity": {
      "type": "string",
      "metadata": {
        "description": "The ID of the user assigned identity to use for the container group."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "restartPolicy": {
      "type": "string",
      "defaultValue": "Never",
      "allowedValues": [
        "Always",
        "Never",
        "OnFailure"
      ],
      "metadata": {
        "description": "The behavior of Azure runtime if container has stopped."
      }
    },
    "starttime": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "The time this template is deployed."
      }
    },

    "PGHOST": {
      "type": "string",
      "metadata": {
        "description": "Explicitly define a (full URL) hostname for PGHOST."
      }
    },
    "PGPASSWORD": {
      "type": "securestring",
      "metadata": {
        "description": "password to connect to database"
      }
    },

    "imageTagWorkflow": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "Image tag for the workflow container."
      }
    },

    "logWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "The ID for a Log Analytics Workspace."
      }
    },
    "logWorkspaceKey": {
      "type": "securestring",
      "metadata": {
        "description": "The key for a Log Analytics Workspace."
      }
    },

    "storageAccountKeyExtracted": {
      "type": "securestring",
      "metadata": {
        "description": "The storage account key for the storage account for extracted files."
      }
    },
    "storageAccountNameExtracted": {
      "type": "string",
      "metadata": {
        "description": "The storage account name for the storage account for extracted files."
      }
    },
    "storageAccountShareExtracted": {
      "type": "string",
      "metadata": {
        "description": "The file share name for the extracted files."
      }
    }

  },

  "variables": {

    "PGDATABASE": "FDS",
    "PGUSER": "postgres",
    "containerregistry": "ghcr.io/rmi-pacta",
    "machineCpuCoresLimitWorkflow": 2,
    "machineCpuCoresRequestWorkflow": 2,
    "machineMemoryInGBLimitWorkflow": 12,
    "machineMemoryInGBRequestWorkflow": 12,
    "mountPathExport": "/mnt/factset-extracted"

  },

  "functions": [],

  "resources": [

    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('containerGroupName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('identity')]": {}
        }
      },
      "properties": {
        "diagnostics": {
          "logAnalytics": {
            "logType": "ContainerInstanceLogs",
            "workspaceId": "[parameters('logWorkspaceId')]",
            "workspaceKey": "[parameters('logWorkspaceKey')]"
          }
        },
        "containers": [
          {
            "name": "workflow-factset",
            "properties": {
              "image": "[concat(variables('containerregistry'),'/workflow.factset:', parameters('imageTagWorkflow'))]",
              "ports": [],
              "resources": {
                "limits": {
                  "cpu": "[variables('machineCpuCoresLimitWorkflow')]",
                  "memoryInGB": "[variables('machineMemoryInGBLimitWorkflow')]"
                },
                "requests": {
                  "cpu": "[variables('machineCpuCoresRequestWorkflow')]",
                  "memoryInGB": "[variables('machineMemoryInGBRequestWorkflow')]"
                }
              },
              "environmentVariables": [
                {
                  "name": "PGUSER",
                  "value": "[variables('PGUSER')]"
                },
                {
                  "name": "PGPASSWORD",
                  "secureValue": "[parameters('PGPASSWORD')]"
                },
                {
                  "name": "PGHOST",
                  "value": "[parameters('PGHOST')]"
                },
                {
                  "name": "PGDATABASE",
                  "value": "[variables('PGDATABASE')]"
                },
                {
                  "name": "DEPLOY_START_TIME",
                  "value": "[parameters('starttime')]"
                },
                {
                  "name": "MACHINE_CORES",
                  "value": "[variables('machineCpuCoresRequestWorkflow')]"
                },
                {
                  "name": "LOG_LEVEL",
                  "value": "TRACE"
                },
                {
                  "name": "EXPORT_DESTINATION",
                  "value": "[variables('mountPathExport')]"
                },
                {
                  "name": "DATA_TIMESTAMP",
                  "value": "[parameters('dataTimestamp')]"
                },
                {
                  "name": "ISS_REPORTING_YEAR",
                  "value": "[parameters('issReportingYear')]"
                },
                {
                  "name": "UPDATE_DB",
                  "value": "FALSE"
                }
              ],
              "volumeMounts": [
                {
                  "name": "factset-extracted",
                  "mountPath": "[variables('mountPathExport')]"
                }
              ]
            }
          }
        ],
        "restartPolicy": "[parameters('restartPolicy')]",
        "osType": "Linux",
        "volumes": [
          {
            "name": "factset-extracted",
            "azureFile": {
              "shareName": "[parameters('storageAccountShareExtracted')]",
              "readOnly": false,
              "storageAccountName": "[parameters('storageAccountNameExtracted')]",
              "storageAccountKey": "[parameters('storageAccountKeyExtracted')]"
            }
          }
        ]
      }
    }

  ],
  "outputs": {}
}
